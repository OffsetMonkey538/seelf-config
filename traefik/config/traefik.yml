global:
  checkNewVersion: false
  sendAnonymousUsage: false

log:
  level: INFO
  filePath: "/var/log/traefik.log"
  maxSize: 5 # In mb
  compress: true

api:
  dashboard: true
  insecure: false

entryPoints:
  # Insecure (http) redirects to secure (https)
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https

  # Has https and thus ssl certs
  websecure:
    address: :443
    http:
      tls:
        certResolver: cloudflare # Cert resolver defined below
        domains:
          - main: 'oracle.offsetmonkey538.top'
            sans: '*.oracle.offsetmonkey538.top'
          - main: 'docs.offsetmonkey538.top'
            sans: '*.docs.offsetmonkey538.top'

    # Don't use these in this instance
    ## These are required for Immich uploads to work, otherwise uploads would cancel after the default timeout (5s I think?) was reached. Also possible to set to 0 for no timeout.
    ## No upload will take longer than an hour, right...?
    #transport:
    #  respondingTimeouts:
    #    readTimeout: 1h # Probably required? This should be the timeout for *traefik* reading *your* response, which would be uploading to the server
    #    idleTimeout: 1h # Probably not be needed? This is for idle keep-alive connections
    #    writeTimeout: 1h  # Maybe not needed? This should be the timeout for *traefik* writing the response, which should be downloading from the server

# Allows traefik to request Lets Encrypt certificates for your domain.
#  To validate that you own the doamin, it like makes a DNS record on your it and then checks if the record exists.
certificatesResolvers:
  cloudflare:
    acme:
      email: "offsetmonkey538@gmail.com"
      storage: /var/traefik/certs/acme.json
      caServer: 'https://acme-v02.api.letsencrypt.org/directory'
      keyType: EC256
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"

providers:
  # Allows traefik to read docker labels for configuration and access services over the traefik-proxy network (created externally)
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    network: "traefik-proxy"
  # Allows traefik to read rules from /etc/traefik/rules
  file:
    directory: /etc/traefik/rules
    watch: true # Rules can be reloaded at runtime

# Disables SSL certificate validation between traefik and the backend services.
#  Pretty sure encryption will still be used between services that have a self signed cert?
serversTransport:
  insecureSkipVerify: true
